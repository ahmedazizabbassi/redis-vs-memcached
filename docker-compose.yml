# Docker Compose configuration for Cache Benchmark Tool

services:
  # Redis service
  redis:
    image: redis:8.2-alpine
    container_name: cache-benchmark-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - cache-benchmark-network

  # Memcached service
  memcached:
    image: memcached:1.6-alpine
    container_name: cache-benchmark-memcached
    ports:
      - "11211:11211"
    command: memcached -m 512 -c 1024
    healthcheck:
      test: ["CMD", "sh", "-c", "echo 'version' | nc localhost 11211"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - cache-benchmark-network

  # PHP application
  app:
    build: .
    container_name: cache-benchmark-app
    depends_on:
      redis:
        condition: service_healthy
      memcached:
        condition: service_healthy
    volumes:
      - ./results:/app/results
      - ./.env:/app/.env:ro
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MEMCACHED_HOST=memcached
      - MEMCACHED_PORT=11211
      - BENCHMARK_ITERATIONS=1000
      - BENCHMARK_CONCURRENT_CONNECTIONS=10
      - BENCHMARK_OUTPUT_DIR=/app/results
    networks:
      - cache-benchmark-network
    profiles:
      - benchmark

  # Development environment with hot reload
  app-dev:
    build: .
    container_name: cache-benchmark-app-dev
    depends_on:
      redis:
        condition: service_healthy
      memcached:
        condition: service_healthy
    volumes:
      - .:/app
      - ./results:/app/results
      - ./.env:/app/.env:ro
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MEMCACHED_HOST=memcached
      - MEMCACHED_PORT=11211
      - BENCHMARK_ITERATIONS=100
      - BENCHMARK_CONCURRENT_CONNECTIONS=5
      - BENCHMARK_OUTPUT_DIR=/app/results
    networks:
      - cache-benchmark-network
    profiles:
      - dev

  # Web interface for viewing results (optional)
  nginx:
    image: nginx:alpine
    container_name: cache-benchmark-nginx
    ports:
      - "8080:80"
    volumes:
      - ./results:/usr/share/nginx/html/results:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/index.html:/usr/share/nginx/html/index.html:ro
    depends_on:
      - app
    networks:
      - cache-benchmark-network
    profiles:
      - web

volumes:
  redis_data:
    driver: local

networks:
  cache-benchmark-network:
    driver: bridge
